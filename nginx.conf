user root root;
worker_processes  auto;

stream {
    upstream backend {
        server 127.0.0.1:1936;
    }
    server {
        listen 1935 ssl;
        proxy_pass backend;
        ssl_certificate /root/datasetu-video-server/certificate.pem;
        ssl_certificate_key /root/datasetu-video-server/key.pem;
    }
}

events {
    worker_connections  1024;
}

# RTMP Config

rtmp {
    server {
        listen 127.0.0.1:1936; # Listen on standard RTMP port
        chunk_size 4000;
        application live{
            live on;
            #push rtmp://localhost:1936/play;
            #exec_static echo $arg_token >> /tmp/test.txt;
            #exec_publish_done ffmpeg -i /root/$name/.flv -vcodec copy -acodec copy -f flv rtmps://live-api-s.facebook.com:443/rtmp/$name?$args;
            #exec_publish echo $args >> /tmp/test.txt;
            #exec_publish bash -c "echo 'hello world $args' > /tmp/test.txt"
            hls on;
            hls_nested on;
            hls_fragment_naming system;
            #hls_path /Users/toan/Sites/mnt/hls/;
            hls_path /root/datasetu-video-server/storage/live/;
            hls_fragment 3;
            hls_playlist_length 60;
            record all;
            record_path /root/datasetu-video-server/record/;
            record_unique on;
            record_suffix -%d-%b-%y-%T.flv;
            on_publish http://auth:3001/api/on-live-auth;
            on_play http://auth:3001/api/on-live-auth;
            exec_publish bash -c "/root/datasetu-video-server/test.sh '$name'";
        }
        #application play {
            #live on;
            # Turn on HLS
            #hls on;
            #hls_nested on;
            #hls_fragment_naming system;
            #hls_path /Users/toan/Sites/mnt/hls/;
            #hls_path /root/datasetu-video-server/storage/live/;
            #hls_fragment 3;
            #hls_playlist_length 60;
            #exec ln -sf /root/datasetu-video-server/storage/live/$name/index.m3u8 /root/datasetu-video-server/storage/live/$name/playlist.m3u8;
            # disable consuming the stream from nginx as rtmp
            # deny play all;
            #only allow from local
            # allow publish 127.0.0.1;
            # deny publish all;
        #}
    }
}
# End RTMP Config
http {

    default_type  application/octet-stream;
    sendfile off;
    tcp_nopush on;


    server {
        # listen 3002;
        listen 3002 ssl;
        server_name 127.0.0.1;

        ssl_certificate /root/datasetu-video-server/certificate.pem;
        ssl_certificate_key /root/datasetu-video-server/key.pem;
        location /live {
        #proxy_pass http://auth:3001/api/on-hls-auth;
        #set $auth_request_uri $args;
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        # Disable cache
        add_header Cache-Control no-cache;

        # CORS setup
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length';

        # allow CORS preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
        }


            root /root/datasetu-video-server/storage/;

        }
        location /auth {
            internal;
            proxy_pass              http://auth:3001/api/on-hls-auth/;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
        }
    }

    include servers/*;
}
